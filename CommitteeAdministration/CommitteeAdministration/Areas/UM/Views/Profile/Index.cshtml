@model CommitteeAdministration.Areas.UM.ViewModels.ProfileViewModel
@{
    ViewBag.Title = "UserProfile";
    Layout = "~/Areas/UM/Views/Shared/_BaseLayout.cshtml";
}

@section Styles{

    <link href="~/assets/Admin-Panel/assets/pages/css/profile-rtl.min.css" rel="stylesheet" type="text/css" />
    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <link href="~/Content/plugins/bootstrap-dialog/bootstrap-dialog.min.css" rel="stylesheet" />

    @*<link href="../assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css"/>*@

    @* <link href="../assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap-rtl.css" rel="stylesheet" type="text/css" />*@
    <!-- END PAGE LEVEL PLUGINS -->




    <style>
        .has-feedback label ~ .form-control-feedback {
            top: 35px;
        }
    </style>

}

<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">
        <!-- BEGIN PAGE HEADER-->

        <h3 class="page-title">
            اطلاعات کاربری
        </h3>
        <!-- END PAGE HEADER-->
        <div class="row">
            <div class="col-md-12">
                <!-- BEGIN PROFILE SIDEBAR -->
                <div class="profile-sidebar">
                    <!-- PORTLET MAIN -->
                    <div class="portlet light profile-sidebar-portlet ">
                        <!-- SIDEBAR USERPIC -->
                        <div class="profile-userpic">
                            <img src="~/assets/Admin-Panel/assets/pages/media/profile/profile_user.jpg" class="img-responsive" alt="">
                        </div>
                        <!-- END SIDEBAR USERPIC -->
                        <!-- SIDEBAR USER TITLE -->
                        <div class="profile-usertitle">
                            <div class="profile-usertitle-name"> Marcus Doe </div>
                            <div class="profile-usertitle-job"> Developer </div>
                        </div>
                        <!-- END SIDEBAR USER TITLE -->
                        <!-- SIDEBAR BUTTONS -->
                        @*<div class="profile-userbuttons">
                                <button type="button" class="btn btn-circle green btn-sm">Follow</button>
                                <button type="button" class="btn btn-circle red btn-sm">Message</button>
                            </div>*@
                        <!-- END SIDEBAR BUTTONS -->
                        <!-- SIDEBAR MENU -->
                        @*<div class="profile-usermenu">
                                <ul class="nav">
                                    <li>
                                        <a href="page_user_profile_1.html">
                                            <i class="icon-home"></i> Overview
                                        </a>
                                    </li>
                                    <li class="active">
                                        <a href="page_user_profile_1_account.html">
                                            <i class="icon-settings"></i> Account Settings
                                        </a>
                                    </li>
                                    <li>
                                        <a href="page_user_profile_1_help.html">
                                            <i class="icon-info"></i> Help
                                        </a>
                                    </li>
                                </ul>
                            </div>*@
                        <!-- END MENU -->
                    </div>
                    <!-- END PORTLET MAIN -->

                </div>
                <!-- END BEGIN PROFILE SIDEBAR -->
                <!-- BEGIN PROFILE CONTENT -->
                <div class="profile-content">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="portlet light ">
                                <div class="portlet-title tabbable-line" style="float: right">
                                    <div class="caption caption-md">
                                        <i class="icon-globe theme-font hide"></i>
                                        @*<span class="caption-subject font-blue-madison bold uppercase">Profile Account</span>*@
                                    </div>
                                    <ul class="nav nav-tabs">
                                        <li class="active">
                                            <a href="#personalInfoTab" data-toggle="tab">اطلاعات شخصی</a>
                                        </li>

                                        <li>
                                            <a href="#changePasswordTab" data-toggle="tab">تغییر رمز عبور</a>
                                        </li>

                                    </ul>
                                </div>
                                <div class="portlet-body">
                                    <div class="tab-content">
                                        <!-- PERSONAL INFO TAB -->
                                        <div class="tab-pane active" id="personalInfoTab">
                                            <form role="form" action="/UM/Profile/EditProfile" method="post" id="UpdateProfile">
                                                @Html.AntiForgeryToken()
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "input-xlarge form-control" })
                                                    @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@

                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input-xlarge form-control" } })
                                                    @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@

                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input-xlarge form-control" } })
                                                    @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "input-xlarge form-control" } })
                                                    @*@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })*@

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "input-xlarge form-control" } })
                                                    @*@Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })*@

                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })

                                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                                    @*@Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })*@

                                                </div>

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.CommitteeName, htmlAttributes: new { @class = "control-label" })
                                                    @*@Html.DisplayTextFor(model => model.CommitteeName)*@
                                                    @Html.TextBoxFor(model => model.CommitteeName, new { @class = "input-xlarge form-control", @readonly = "readonly" })
                                                </div>

                                                <div class="margiv-top-10">
                                                    @*<a id="updateBtn" class="btn green">  </a>*@
                                                    <button type="submit" class="btn green">به روز رسانی</button>
                                                </div>


                                                @*<div class="form-group">
                                                        <label class="control-label">نام</label>
                                                        <input type="text" placeholder="John" class="form-control"/>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">نام خانوادگی</label>
                                                        <input type="text" placeholder="Doe" class="form-control"/>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">تلفن همراه</label>
                                                        <input type="text" placeholder="09123456789" class="form-control"/>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">تاریخ تولد</label>
                                                        <input type="text" placeholder="Design, Web etc." class="form-control"/>
                                                    </div>

                                                    <div class="form-group">
                                                        <label class="control-label">توضیحات</label>
                                                        <textarea class="form-control" rows="3" placeholder="We are KeenThemes!!!"></textarea>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label">Website Url</label>
                                                        <input type="text" placeholder="http://www.mywebsite.com" class="form-control"/>
                                                    </div>
                                                    <div class="margiv-top-10">
                                                        <a href="javascript:;" class="btn green"> به روز رسانی </a>
                                                    </div>*@
                                            </form>
                                        </div>
                                        <!-- END PERSONAL INFO TAB -->
                                        <!-- CHANGE AVATAR TAB -->
                                        <!-- END CHANGE AVATAR TAB -->
                                        <!-- CHANGE PASSWORD TAB -->
                                        <div class="tab-pane" id="changePasswordTab">
                                            <form id="ResetPasswordForm" action="/Account/ChangePassword">
                                                <div class="form-group">
                                                    <label class="control-label">رمز عبور فعلی</label>
                                                    <input name="OldPassword" id="OldPassword" type="password" class="input-xlarge form-control" />
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">رمز عبور جدید</label>
                                                    <input name="NewPassword" id="NewPassword" type="password" class="input-xlarge form-control" />
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">تایید رمز عبور</label>
                                                    <input name="ConfirmNewPassword" id="ConfirmNewPassword" type="password" class="input-xlarge form-control" />
                                                </div>
                                                @*<div class="margin-top-10">*@
                                                @*<a id="EditUserPasswordBtn" class="btn green"> تغییر رمز عبور </a>*@
                                                <button id="EditUserPasswordBtn" name="EditUserPasswordBtn" type="submit" class="btn green">تغییر رمز عبور</button>
                                                @*<a id="CancelUserPasswordBtn" class="btn default"> Cancel </a>*@

                                            </form>
                                        </div>
                                        <!-- END CHANGE PASSWORD TAB -->


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- END PROFILE CONTENT -->
            </div>
        </div>
    </div>
    <!-- END CONTENT BODY -->
</div>



@section scripts{
    <script src="~/Content/plugins/bootstrap-validator/bootstrapValidator.min.js"></script>
    <script src="~/Content/plugins/bootstrap-validator/fa_IR.js"></script>
    <script type="text/javascript">



        $(document).ready(function () {

            $('#userManagementArea').addClass("active");
            $('#ResetPasswordForm').bootstrapValidator({
                live: 'enable',
                submitButton: '$ResetPasswordForm button[type="submit]',
                //submitHandler: function(validatior, form, submitButton) {
                //    $.ajax({
                //        url: "~/account/ChangePassword",
                //        method: "post",
                //        data: $('#ResetPasswordForm').serialize(),
                //        dataType: "json",
                //        success: function(data) {
                //            $("#ResetPasswordForm").data('bootstrapValidator').resetForm();
                //            $("#ResetPasswordForm")[0].reset();

                //        },
                //        error: function (jqXHR, exception) {
                //            var msg = '';
                //            if (jqXHR.status === 0) {
                //                msg = 'Not connect.\n Verify Network.';
                //            } else if (jqXHR.status == 404) {
                //                msg = 'Requested page not found. [404]';
                //            } else if (jqXHR.status == 500) {
                //                msg = 'Internal Server Error [500].';
                //            } else if (exception === 'parsererror') {
                //                msg = 'Requested JSON parse failed.';
                //            } else if (exception === 'timeout') {
                //                msg = 'Time out error.';
                //            } else if (exception === 'abort') {
                //                msg = 'Ajax request aborted.';
                //            } else {
                //                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                //            }
                //            console.log(msg);
                //        },
                //    });
                //return false;
                //},

                submitHandler: function (validatior, form, submitButton) {
                    return false;
                },

                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },

                fields: {
                    OldPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            }
                        }
                    },

                    NewPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            },
                            different: {
                                field: 'OldPassword'

                            }
                        }
                    },

                    ConfirmNewPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            },
                            different: {
                                field: 'OldPassword'

                            },
                            identical: {
                                field: 'NewPassword'

                            }
                        }

                    }
                }
            })
                .on('success.form.bv', function (e) {
                    // Prevent form submission
                    e.preventDefault();
                    // Get the form instance
                    var $form = $(e.target);
                    // Get the BootstrapValidator instance
                    var bv = $form.data('bootstrapValidator');
                    // Use Ajax to submit form data
                    console.log($form.attr('action'));

                    var data = {
                        "OldPassword": $("#OldPassword").val(),
                        "NewPassword": $("#NewPassword").val(),
                        "ConfirmNewPassword": $("#ConfirmNewPassword").val()
                    };


                    $.ajax({
                        url: '/account/ChangePassword',
                        type: "POST",
                        data: JSON.stringify(data),
                        cache: false,
                        dataType: "json",
                        contentType: "application/json",
                        success: function (response) {
                            BootstrapDialog.show({
                                title: 'عملیات رمز عبور',
                                size: BootstrapDialog.SIZE_WIDE,
                                message: "رمز عبور با موفیت تغییر کرد.",
                                //closable: false,
                                //buttons: [{
                                //    label: 'Dialog CLOSABLE!',
                                //    cssClass: 'btn-success',
                                //    action: function (dialogRef) {
                                //        dialogRef.setClosable(true);
                                //    }
                                //}, {
                                //    label: 'Dialog UNCLOSABLE!',
                                //    cssClass: 'btn-warning',
                                //    action: function (dialogRef) {
                                //        dialogRef.setClosable(false);
                                //    }
                                //}, {
                                //    label: 'Close the dialog',
                                //    action: function (dialogRef) {
                                //        dialogRef.close();
                                //    }
                                //}],
                                onhide: function (dialogRef) {
                                    location.reload();
                                }

                            });
                        },
                        error: function (jqXHR, exception) {
                            var msg = '';
                            if (jqXHR.status === 0) {
                                msg = 'Not connect.\n Verify Network.';
                            } else if (jqXHR.status == 404) {
                                msg = 'Requested page not found. [404]';
                            } else if (jqXHR.status == 500) {
                                msg = 'Internal Server Error [500].';
                            } else if (exception === 'parsererror') {
                                msg = 'Requested JSON parse failed.';
                            } else if (exception === 'timeout') {
                                msg = 'Time out error.';
                            } else if (exception === 'abort') {
                                msg = 'Ajax request aborted.';
                            } else {
                                msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            console.log(msg);
                        }
                    });

                });





            $('#UpdateProfile').bootstrapValidator({
                live: 'enable',
                submitButton: 'UpdateProfile button[type="submit]',

                submitHandler: function (validatior, form, submitButton) {
                    return false;
                },

                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },

                fields: {
                    OldPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            }
                        }
                    },

                    NewPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            },
                            different: {
                                field: 'OldPassword'

                            }
                        }
                    },

                    ConfirmNewPassword: {
                        validators: {
                            notEmpty: {},
                            stringLength: {
                                min: 6,
                                max: 30
                            },
                            different: {
                                field: 'OldPassword'

                            },
                            identical: {
                                field: 'NewPassword'

                            }
                        }

                    }
                }
            })
                  .on('success.form.bv', function (e) {
                      // Prevent form submission
                      e.preventDefault();
                      // Get the form instance
                      var $form = $(e.target);
                      // Get the BootstrapValidator instance
                      var bv = $form.data('bootstrapValidator');
                      // Use Ajax to submit form data
                      console.log($form.attr('action'));

                      var data = {
                          "OldPassword": $("#OldPassword").val(),
                          "NewPassword": $("#NewPassword").val(),
                          "ConfirmNewPassword": $("#ConfirmNewPassword").val()
                      };


                      $.ajax({
                          url: '/account/ChangePassword',
                          type: "POST",
                          data: JSON.stringify(data),
                          cache: false,
                          dataType: "json",
                          contentType: "application/json",
                          success: function (response) {
                              BootstrapDialog.show({
                                  title: 'عملیات رمز عبور',
                                  size: BootstrapDialog.SIZE_WIDE,
                                  message: "رمز عبور با موفیت تغییر کرد.",
                                    onhide: function (dialogRef) {
                                      location.reload();
                                  }

                              });
                          },
                          error: function (jqXHR, exception) {
                              var msg = '';
                              if (jqXHR.status === 0) {
                                  msg = 'Not connect.\n Verify Network.';
                              } else if (jqXHR.status == 404) {
                                  msg = 'Requested page not found. [404]';
                              } else if (jqXHR.status == 500) {
                                  msg = 'Internal Server Error [500].';
                              } else if (exception === 'parsererror') {
                                  msg = 'Requested JSON parse failed.';
                              } else if (exception === 'timeout') {
                                  msg = 'Time out error.';
                              } else if (exception === 'abort') {
                                  msg = 'Ajax request aborted.';
                              } else {
                                  msg = 'Uncaught Error.\n' + jqXHR.responseText;
                              }
                              console.log(msg);
                          }
                      });

                  });

            $('#CancelUserPasswordBtn').click(function () {
                document.getElementById("ResetPasswordForm").reset();
                return false;
            });

        });

    </script>
    <script src="~/Content/plugins/bootstrap-dialog/bootstrap-dialog.js"></script>

}
