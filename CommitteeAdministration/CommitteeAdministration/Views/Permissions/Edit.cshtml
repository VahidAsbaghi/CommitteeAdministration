@using System.Activities.Statements
@using System.Web.Mvc.Html
@using System.Web.UI.WebControls
@using Microsoft.Ajax.Utilities
@model CommitteeAdministration.ViewModels.EditPermissionViewModel

@{
    ViewBag.Title = "Edit";
   // Layout = "~/Views/_ViewStart.cshtml";
    //var roles = Model.Roles.ToList();
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Permission</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Permission.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.IndicatorDeadlineAdjust, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.IndicatorDeadlineAdjust)
                    @Html.ValidationMessageFor(model => model.Permission.IndicatorDeadlineAdjust, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.Criterion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.Criterion)
                    @Html.ValidationMessageFor(model => model.Permission.Criterion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.SubCriterion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.SubCriterion)
                    @Html.ValidationMessageFor(model => model.Permission.SubCriterion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.Indicator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.Indicator)
                    @Html.ValidationMessageFor(model => model.Permission.Indicator, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Permission.RealIndicator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.RealIndicator)
                    @Html.ValidationMessageFor(model => model.Permission.RealIndicator, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.Add, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.Add)
                    @Html.ValidationMessageFor(model => model.Permission.Add, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.Delete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.Delete)
                    @Html.ValidationMessageFor(model => model.Permission.Delete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Permission.Update, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Permission.Update)
                    @Html.ValidationMessageFor(model => model.Permission.Update, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
       
        <div class="form-group">
            @Html.Label("Roles", "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
            @for (int i = 0; i < Model.Roles.Count; i++)
            {
                var role = Model.Roles[i];
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.LabelForModel(role.Name)
                        @Html.CheckBoxFor(m => m.IsContainedRole[i])
                    </div>
                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
